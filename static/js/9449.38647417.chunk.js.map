{"version":3,"file":"static/js/9449.38647417.chunk.js","mappings":"iLAAA,IAMaA,EAAS,CAClBC,KAPS,kBAQTC,MANA,6EAOAC,MALA,uH,+GCDSC,EAASC,EAAAA,KAAaC,MAAM,CACrCL,KAAMI,EAAAA,KAEDE,QAAQP,EAAAA,OAAOC,KAAM,qBACrBO,IAAI,GACJC,IAAI,IACJC,UACAC,WACLR,MAAOE,EAAAA,KAEFE,QAAQP,EAAAA,OAAOG,MAAO,oBACtBO,UACAC,WACLT,MAAOG,EAAAA,KAEFE,QACGP,EAAAA,OAAOE,MACP,wDAEHQ,UACAC,WACLC,MAAOP,EAAAA,KAAYQ,MAAM,CAAC,IAAK,IAAK,IAAK,MAAMH,UAAUC,WACzDG,MAAOT,EAAAA,KAEFM,WACAI,KAAK,OAAQ,+BAA+B,SAACC,GAC1C,OAAsB,KAAb,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,OAKf,IACCF,KAAK,OAAQ,4CAA4C,SAACC,GACvD,OAAsB,KAAb,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,UAGAD,GAASA,EAAM,GAAGE,MAAQ,IAEzC,IACCH,KAAK,OAAQ,iCAAiC,SAACC,GAC5C,GAAKA,EAEE,OAAsB,KAAb,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,UAGXD,GAA2B,eAAlBA,EAAM,GAAGG,KAC7B,IACCJ,KACG,QACA,wCAAuC,eAAAK,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACvC,SAAAC,EAAOR,GAAK,OAAAM,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACD,IAAIC,SAAQ,SAACC,GAChB,IAAMC,EAAS,IAAIC,WACE,IAAjBjB,EAAMC,QACNc,GAAQ,GAEZC,EAAOE,cAAclB,EAAM,IAC3BgB,EAAOG,OAAS,SAAUnB,GACtB,IAAMoB,EAAM,IAAIC,MAChBD,EAAIE,IAAMtB,EAAMuB,OAAOC,OACvBJ,EAAID,OAAS,WACT,IAAQM,EAAkBC,KAAlBD,MAAOE,EAAWD,KAAXC,OAEXZ,IADAU,EAAQ,IAAME,EAAS,IAK/B,CACJ,CACJ,IAAGC,MAAK,SAACC,GAAI,OAAKA,CAAI,KAAC,wBAAAnB,EAAAoB,OAAA,GAAAtB,EAAA,KAC1B,gBAAAuB,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,EArBsC,K","sources":["validation/regExp.js","validation/schema.js"],"sourcesContent":["const name = /^[a-zA-Z '.-]*$/\r\nconst phone =\r\n    /^(\\+38[ ])?\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-.]?([0-9]{2})[-.]?([0-9]{2})$/\r\nconst email =\r\n    /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n\r\nexport const regExp = {\r\n    name,\r\n    phone,\r\n    email,\r\n}\r\n","import * as yup from 'yup';\r\nimport { regExp } from './regExp';\r\n\r\nexport const schema = yup.object().shape({\r\n    name: yup\r\n        .string()\r\n        .matches(regExp.name, 'Fill correct name')\r\n        .min(2)\r\n        .max(60)\r\n        .defined()\r\n        .required(),\r\n    email: yup\r\n        .string()\r\n        .matches(regExp.email, 'Fill valid email')\r\n        .defined()\r\n        .required(),\r\n    phone: yup\r\n        .string()\r\n        .matches(\r\n            regExp.phone,\r\n            'Fill phone in correct format +38 (XXX) XXX - XX - XX'\r\n        )\r\n        .defined()\r\n        .required(),\r\n    radio: yup.mixed().oneOf(['1', '2', '3', '4']).defined().required(),\r\n    photo: yup\r\n        .mixed()\r\n        .required()\r\n        .test('name', 'You should provide the file', (value) => {\r\n            if (value?.length === 0) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        })\r\n        .test('size', 'The file size should be no more than 5Mb', (value) => {\r\n            if (value?.length === 0) {\r\n                return false;\r\n            } else {\r\n                return value && value[0].size <= 5000000;\r\n            }\r\n        })\r\n        .test('type', 'Supported only jpg/jpeg files', (value) => {\r\n            if (!value) {\r\n                return;\r\n            } else if (value?.length === 0) {\r\n                return false;\r\n            }\r\n            return value && value[0].type === 'image/jpeg';\r\n        })\r\n        .test(\r\n            'ratio',\r\n            'Resolution should be at least 70x70px',\r\n            async (value) => {\r\n                return new Promise((resolve) => {\r\n                    const reader = new FileReader();\r\n                    if (value.length === 0) {\r\n                        resolve(false);\r\n                    }\r\n                    reader.readAsDataURL(value[0]);\r\n                    reader.onload = function (value) {\r\n                        const img = new Image();\r\n                        img.src = value.target.result;\r\n                        img.onload = function () {\r\n                            const { width, height } = this;\r\n                            if (width < 70 || height < 70) {\r\n                                resolve(false);\r\n                            } else {\r\n                                resolve(true);\r\n                            }\r\n                        };\r\n                    };\r\n                }).then((item) => item);\r\n            }\r\n        ),\r\n});\r\n"],"names":["regExp","name","phone","email","schema","yup","shape","matches","min","max","defined","required","radio","oneOf","photo","test","value","length","size","type","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reader","FileReader","readAsDataURL","onload","img","Image","src","target","result","width","this","height","then","item","stop","_x","apply","arguments"],"sourceRoot":""}