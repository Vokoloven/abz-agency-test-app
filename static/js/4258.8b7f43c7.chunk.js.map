{"version":3,"file":"static/js/4258.8b7f43c7.chunk.js","mappings":"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","sources":["components/Card/Card.jsx","components/TextInput/TextInput.jsx","components/TextInput/TextInputBox.jsx","components/TextInput/handleErrorText.js","components/TextInput/inputs.js","components/TextInput/phoneFilter.js","components/TextInput/style/StyledTextInput.jsx","components/TextInput/style/StyledTextPlaceholder.jsx","components/TextInput/style/TextInputWrapper.jsx","components/Tooltip/Tooltip.jsx","components/Tooltip/sliceText.js","components/Tooltip/style/StyledTooltipBox.jsx","components/Tooltip/style/StyledTooltipCard.jsx","components/Tooltip/style/StyledTooltipText.jsx","components/Tooltip/tooltipHandler.js","components/Typography/Typography.jsx","hooks/useWindowDimension.js"],"sourcesContent":["import { Box } from 'components/Box';\r\nimport { Typography } from 'components/Typography';\r\nimport { Tooltip } from 'components/Tooltip';\r\nimport { phoneFilter } from 'components/TextInput';\r\n\r\nexport const Card = ({ props: { name, position, email, phone, photo } }) => {\r\n    return (\r\n        <Box p={5} width={'100%'} bg={'white'} borderRadius={10}>\r\n            <Box\r\n                as={'ul'}\r\n                display={'flex'}\r\n                alignItems={'center'}\r\n                flexDirection={'column'}\r\n            >\r\n                <Box as={'li'}>\r\n                    <Box\r\n                        as={'img'}\r\n                        src={photo}\r\n                        alt={'photo'}\r\n                        width={70}\r\n                        height={70}\r\n                        borderRadius={'50%'}\r\n                        loading={'lazy'}\r\n                    />\r\n                </Box>\r\n                <Tooltip sx={{ mt: 20 }} itemName={'text'}>\r\n                    {name}\r\n                </Tooltip>\r\n                <Typography as={'li'} variant={'body'} mt={20}>\r\n                    {position}\r\n                </Typography>\r\n                <Tooltip itemName={'email'}>{email}</Tooltip>\r\n                <Typography as={'li'} variant={'body'}>\r\n                    <Box as={'a'} href={`tel:${phone}`}>\r\n                        {phoneFilter(phone).replace(/[-]/g, ' ')}\r\n                    </Box>\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n","import { StyledTextInput } from './style/StyledTextInput'\r\nimport { StyledTextPlaceholder } from './style/StyledTextPlaceholder'\r\nimport { TextInputWrapper } from './style/TextInputWrapper'\r\nimport { Typography } from 'components/Typography'\r\nimport { Box } from 'components/Box'\r\nimport { inputs } from './inputs'\r\nimport { handleErrorText } from './handleErrorText'\r\n\r\nexport const TextInput = ({ register, input, error }) => {\r\n    return inputs.map(({ id, placeholder }) => (\r\n        <Box\r\n            key={id}\r\n            width={'100%'}\r\n            sx={{\r\n                ':not(:last-child)': {\r\n                    marginBottom: '32px',\r\n                },\r\n            }}\r\n        >\r\n            <TextInputWrapper>\r\n                <StyledTextInput\r\n                    key={id}\r\n                    id={id}\r\n                    {...register(id)}\r\n                    error={error?.[id]}\r\n                    type={'text'}\r\n                />\r\n                <StyledTextPlaceholder\r\n                    inputValue={input[id]}\r\n                    error={error?.[id]}\r\n                >\r\n                    {placeholder}\r\n                </StyledTextPlaceholder>\r\n            </TextInputWrapper>\r\n            {handleErrorText(error, id, Typography, Box)}\r\n        </Box>\r\n    ))\r\n}\r\n","import { Box } from 'components/Box'\r\n\r\nexport const TextInputBox = ({ children }) => {\r\n    return (\r\n        <Box display={'flex'} flexDirection={'column'}>\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n","export const handleErrorText = (error, id, Typography, Box) => {\r\n    if (!!error?.[id]) {\r\n        return (\r\n            <Typography\r\n                as={'p'}\r\n                variant={'helperText'}\r\n                ml={16}\r\n                mt={1}\r\n                color={'error'}\r\n            >\r\n                {error?.[id]?.message}\r\n            </Typography>\r\n        )\r\n    } else if (id === 'phone') {\r\n        return (\r\n            <Typography\r\n                as={'p'}\r\n                variant={'helperText'}\r\n                ml={16}\r\n                mt={1}\r\n                color={'placeholder'}\r\n            >\r\n                +38 (XXX) XXX - XX - XX\r\n            </Typography>\r\n        )\r\n    } else {\r\n        return <Box width={'100%'} py={9} />\r\n    }\r\n}\r\n","export const inputs = [\r\n    {\r\n        id: 'name',\r\n        placeholder: 'Your name',\r\n    },\r\n    {\r\n        id: 'email',\r\n        placeholder: 'Email',\r\n    },\r\n    {\r\n        id: 'phone',\r\n        placeholder: 'Phone',\r\n    },\r\n]\r\n","export const phoneFilter = (input) => {\r\n    let length = 0\r\n\r\n    const phoneNumberLength = input?.length\r\n\r\n    if (length <= phoneNumberLength) {\r\n        const phoneNumber = input\r\n            ?.replace(/\\D/g, '')\r\n            .match(/(\\d{0,3})(\\d{0,2})(\\d{0,3})(\\d{0,2})(\\d{0,2})/)\r\n\r\n        const formatPhoneNumber =\r\n            '+38 (0' +\r\n            (phoneNumber[2] ? '' : '') +\r\n            phoneNumber[2] +\r\n            (phoneNumber[3] ? ') ' : '') +\r\n            phoneNumber[3] +\r\n            (phoneNumber[4] ? '-' + phoneNumber[4] : '') +\r\n            (phoneNumber[5] ? '-' + phoneNumber[5] : '')\r\n\r\n        length = phoneNumberLength\r\n\r\n        return formatPhoneNumber\r\n    }\r\n}\r\n","import styled, { css } from 'styled-components'\r\nimport { StyledTextPlaceholder } from './StyledTextPlaceholder'\r\n\r\nexport const StyledTextInput = styled('input')`\r\n    width: 100%;\r\n    padding: 13px 15px;\r\n\r\n    background-color: ${(p) => p.theme.colors.background};\r\n    border: 1px solid ${(p) => p.theme.colors.inputBorder};\r\n    border-radius: ${(p) => p.theme.radii[1]};\r\n    outline: none;\r\n    box-shadow: none;\r\n\r\n    font-weight: ${(p) => p.theme.fontWeights.regular};\r\n    font-size: ${(p) => p.theme.fontSizes[2]};\r\n    line-height: ${(p) => p.theme.lineHeights[2]};\r\n    color: ${(p) => p.theme.colors.black};\r\n\r\n    ${({ error }) =>\r\n        !!error &&\r\n        css`\r\n            border: 2px solid ${(p) => p.theme.colors.error};\r\n            padding: 12px 14px;\r\n        `}\r\n\r\n    &:focus + ${StyledTextPlaceholder} {\r\n        top: 0;\r\n        left: 12px;\r\n        transition: all 0.2s ease-in-out;\r\n\r\n        padding-left: ${(p) => p.theme.space[1]};\r\n        padding-right: ${(p) => p.theme.space[1]};\r\n\r\n        font-size: ${(p) => p.theme.fontSizes[1]};\r\n        line-height: ${(p) => p.theme.lineHeights[1]};\r\n\r\n        background-color: ${(p) => p.theme.colors.background};\r\n\r\n        ${({ error }) =>\r\n            !!error &&\r\n            css`\r\n           color ${(p) => p.theme.colors.error}\r\n        `}\r\n    }\r\n`\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const StyledTextPlaceholder = styled('p')`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${(p) => p.theme.space[4]};\r\n    transform: translateY(-50%);\r\n\r\n    font-weight: ${(p) => p.theme.fontWeights.regular};\r\n    font-size: ${(p) => p.theme.fontSizes[2]};\r\n    line-height: ${(p) => p.theme.lineHeights[2]};\r\n    color: ${(p) => p.theme.colors.placeholder};\r\n\r\n    transition: all 0.2s ease-in-out;\r\n\r\n    ${({ inputValue }) =>\r\n        !!inputValue &&\r\n        css`\r\n            top: 0;\r\n            left: 12px;\r\n\r\n            padding-left: ${(p) => p.theme.space[1]};\r\n            padding-right: ${(p) => p.theme.space[1]};\r\n\r\n            font-size: ${(p) => p.theme.fontSizes[1]};\r\n            line-height: ${(p) => p.theme.lineHeights[1]};\r\n\r\n            background-color: ${(p) => p.theme.colors.background};\r\n        `}\r\n\r\n    ${({ error }) =>\r\n        !!error &&\r\n        css`\r\n            color: ${(p) => p.theme.colors.error};\r\n        `}\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const TextInputWrapper = styled('div')`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n","import { Typography } from 'components/Typography';\r\nimport { StyledTooltipBox } from './style/StyledTooltipBox';\r\nimport { StyledTooltipText } from './style/StyledTooltipText';\r\nimport { StyledTooltipCard } from './style/StyledTooltipCard';\r\nimport { Box } from 'components/Box';\r\nimport { useWindowDimension } from 'hooks/useWindowDimension';\r\nimport { tooltipHandler } from './tooltipHandler';\r\n\r\nexport const Tooltip = ({ children, sx, itemName }) => {\r\n    const { width } = useWindowDimension();\r\n\r\n    return (\r\n        <Box as={'li'} {...sx}>\r\n            <StyledTooltipCard>\r\n                <StyledTooltipText>\r\n                    {tooltipHandler(itemName, Box, Typography, children, width)}\r\n                </StyledTooltipText>\r\n                <StyledTooltipBox>\r\n                    <Typography variant={'body'} color={'white'}>\r\n                        {children}\r\n                    </Typography>\r\n                </StyledTooltipBox>\r\n            </StyledTooltipCard>\r\n        </Box>\r\n    );\r\n};\r\n","const sliceTextByWidth = (width) => {\r\n    if (width >= 360 && width < 768) {\r\n        return 32;\r\n    } else if (width >= 768 && width < 1024) {\r\n        return 38;\r\n    } else if (width >= 1024 && width < 1170) {\r\n        return 26;\r\n    } else {\r\n        return 42;\r\n    }\r\n};\r\n\r\nexport const sliceText = (text, width) => {\r\n    if (typeof text === 'string') {\r\n        const coma = text.length > sliceTextByWidth(width) ? '...' : '';\r\n\r\n        return `${text.slice(0, sliceTextByWidth(width))}${coma}`;\r\n    }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTooltipBox = styled('div')`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, 150%);\r\n\r\n    @media screen and (min-width: ${(p) => p.theme.breakpoints.mobile}) {\r\n        max-width: 328px;\r\n        word-wrap: break-word;\r\n    }\r\n\r\n    @media screen and (min-width: ${(p) => p.theme.breakpoints.tablet}) {\r\n        max-width: 344px;\r\n    }\r\n\r\n    @media screen and (min-width: ${(p) => p.theme.breakpoints.laptop}) {\r\n        max-width: 282px;\r\n    }\r\n\r\n    @media screen and (min-width: ${(p) => p.theme.breakpoints.desktopS}) {\r\n        max-width: initial;\r\n        white-space: nowrap;\r\n        word-wrap: initial;\r\n    }\r\n\r\n    padding: 3px 16px;\r\n    border-radius: 4px;\r\n    background-color: ${(p) => p.theme.colors.black};\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    transition: opacity, 0.3s ease-in-out;\r\n\r\n    z-index: 1;\r\n`;\r\n","import styled, { css } from 'styled-components';\r\nimport { StyledTooltipText } from './StyledTooltipText';\r\nimport { StyledTooltipBox } from './StyledTooltipBox';\r\n\r\nexport const StyledTooltipCard = styled('div')`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & ${StyledTooltipText}:hover + ${StyledTooltipBox} {\r\n        opacity: 1;\r\n    }\r\n\r\n    ${({ sx }) => {\r\n        return css`\r\n        margin\r\n        \r\n        `;\r\n    }}\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledTooltipText = styled('div')``\r\n","import { sliceText } from './sliceText';\r\n\r\nexport const tooltipHandler = (itemName, Box, Typography, children, width) => {\r\n    if (itemName === 'email') {\r\n        return (\r\n            <Box as={'a'} href={`mailto:${children}`}>\r\n                <Typography variant={'body'}>\r\n                    {sliceText(children, width)}\r\n                </Typography>\r\n            </Box>\r\n        );\r\n    } else {\r\n        return (\r\n            <Typography variant={'body'}>\r\n                {sliceText(children, width)}\r\n            </Typography>\r\n        );\r\n    }\r\n};\r\n","import styled from 'styled-components'\r\nimport { variant } from 'styled-system'\r\nimport { composeUtility } from 'style'\r\n\r\nexport const Typography = styled('div')(\r\n    variant({\r\n        variants: {\r\n            heading: {\r\n                fontWeight: 'regular',\r\n                fontSize: 3,\r\n                lineHeight: 3,\r\n            },\r\n            body: {\r\n                fontWeight: 'regular',\r\n                fontSize: 2,\r\n                lineHeight: 2,\r\n            },\r\n            helperText: {\r\n                fontWeight: 'regular',\r\n                fontSize: 1,\r\n                lineHeight: 1,\r\n            },\r\n        },\r\n    }),\r\n    ({ sx }) => {\r\n        return { ...sx }\r\n    },\r\n    composeUtility()\r\n)\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst getWindowDimension = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n\r\n    return { width, height };\r\n};\r\n\r\nexport const useWindowDimension = () => {\r\n    const [dimension, setDimension] = useState(getWindowDimension());\r\n\r\n    useEffect(() => {\r\n        const setWindowDimension = () => setDimension(getWindowDimension());\r\n\r\n        window.addEventListener('resize', setWindowDimension);\r\n\r\n        return () => window.removeEventListener('resize', setWindowDimension);\r\n    }, []);\r\n\r\n    return dimension;\r\n};\r\n"],"names":["Card","_ref","_ref$props","props","name","position","email","phone","photo","_jsx","Box","p","width","bg","borderRadius","children","_jsxs","as","display","alignItems","flexDirection","src","alt","height","loading","Tooltip","sx","mt","itemName","Typography","variant","href","concat","phoneFilter","replace","TextInput","register","input","error","inputs","map","_ref2","id","placeholder","marginBottom","TextInputWrapper","StyledTextInput","_objectSpread","type","StyledTextPlaceholder","inputValue","handleErrorText","TextInputBox","_error$id","ml","color","message","py","length","phoneNumberLength","phoneNumber","match","styled","_templateObject","_taggedTemplateLiteral","theme","colors","background","inputBorder","radii","fontWeights","regular","fontSizes","lineHeights","black","css","_templateObject2","space","_templateObject3","useWindowDimension","StyledTooltipCard","StyledTooltipText","tooltipHandler","StyledTooltipBox","sliceTextByWidth","sliceText","text","coma","slice","breakpoints","mobile","tablet","laptop","desktopS","variants","heading","fontWeight","fontSize","lineHeight","body","helperText","composeUtility","getWindowDimension","_window","window","innerWidth","innerHeight","_useState","useState","_useState2","_slicedToArray","dimension","setDimension","useEffect","setWindowDimension","addEventListener","removeEventListener"],"sourceRoot":""}