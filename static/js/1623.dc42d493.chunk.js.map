{"version":3,"file":"static/js/1623.dc42d493.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Container/Container.jsx","components/Typography/Typography.jsx","hooks/useLazyBackground.js","sections/Hero/Background.jsx","sections/Hero/Hero.jsx"],"sourcesContent":["import styled, { css } from 'styled-components'\r\nimport { variant } from 'styled-system'\r\nimport { composeUtility } from 'style'\r\n\r\nexport const Button = styled('button')(\r\n    variant({\r\n        variants: {\r\n            primary: {\r\n                minWidth: 100,\r\n                py: 1,\r\n                border: 'none',\r\n                borderRadius: 80,\r\n                fontWeight: 'regular',\r\n                fontSize: 2,\r\n                lineHeight: 2,\r\n                bg: 'primary',\r\n                color: 'black',\r\n            },\r\n        },\r\n    }),\r\n\r\n    ({ sx }) => {\r\n        return { ...sx }\r\n    },\r\n\r\n    (props) =>\r\n        props.disabled &&\r\n        css`\r\n            background-color: ${props.theme.colors.disabled};\r\n            color: ${props.theme.colors.white};\r\n        `,\r\n\r\n    composeUtility()\r\n)\r\n","import styled, { css } from 'styled-components';\r\nimport { composeUtility } from 'style';\r\n\r\nexport const Container = styled('div')(\r\n    (props) => {\r\n        return css`\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            padding-left: ${props.theme.space[4]};\r\n            padding-right: ${props.theme.space[4]};\r\n            @media screen and (min-width: ${props.theme.breakpoints.mobile}) {\r\n                max-width: ${props.theme.breakpoints.mobile};\r\n            }\r\n            @media screen and (min-width: ${props.theme.breakpoints.tablet}) {\r\n                max-width: ${props.theme.breakpoints.tablet};\r\n                padding-left: ${props.theme.space[8]};\r\n                padding-right: ${props.theme.space[8]};\r\n            }\r\n            @media screen and (min-width: ${props.theme.breakpoints.laptop}) {\r\n                max-width: ${props.theme.breakpoints.laptop};\r\n                padding-left: 60px;\r\n                padding-right: 60px;\r\n            }\r\n            @media screen and (min-width: ${props.theme.breakpoints.desktopS}) {\r\n                max-width: ${props.theme.breakpoints.desktopS};\r\n                padding-left: 0;\r\n                padding-right: 0;\r\n            }\r\n        `;\r\n    },\r\n\r\n    composeUtility()\r\n);\r\n","import styled from 'styled-components'\r\nimport { variant } from 'styled-system'\r\nimport { composeUtility } from 'style'\r\n\r\nexport const Typography = styled('div')(\r\n    variant({\r\n        variants: {\r\n            heading: {\r\n                fontWeight: 'regular',\r\n                fontSize: 3,\r\n                lineHeight: 3,\r\n            },\r\n            body: {\r\n                fontWeight: 'regular',\r\n                fontSize: 2,\r\n                lineHeight: 2,\r\n            },\r\n            helperText: {\r\n                fontWeight: 'regular',\r\n                fontSize: 1,\r\n                lineHeight: 1,\r\n            },\r\n        },\r\n    }),\r\n    ({ sx }) => {\r\n        return { ...sx }\r\n    },\r\n    composeUtility()\r\n)\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useLazyBackground = (src) => {\r\n    const [sourceLoaded, setSourceLoaded] = useState(null);\r\n    const isFirstLoading = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isFirstLoading.current === true) {\r\n            const link = document.createElement('link');\r\n            link.rel = 'preload';\r\n            link.as = 'image';\r\n            link.href = src;\r\n            document.head.appendChild(link);\r\n\r\n            const img = new Image();\r\n            img.src = src;\r\n            img.onload = () => setSourceLoaded(src);\r\n\r\n            return () => {\r\n                isFirstLoading.current = false;\r\n            };\r\n        }\r\n    }, [src]);\r\n\r\n    return sourceLoaded;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Background = styled('div')`\r\n    width: 100%;\r\n    height: 500px;\r\n\r\n    @media screen and (min-width: ${(p) => p.theme.breakpoints.laptop}) {\r\n        height: 650px;\r\n    }\r\n\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\r\n        url(${({ src }) => src});\r\n    background-repeat: no-repeat;\r\n    background-size: auto 150%;\r\n    background-position: bottom;\r\n`;\r\n","import { Button } from 'components/Button';\r\nimport { Container } from 'components/Container';\r\nimport { Typography } from 'components/Typography';\r\nimport { Box } from 'components/Box';\r\nimport { Background } from './Background';\r\nimport { useLazyBackground } from 'hooks/useLazyBackground';\r\nimport image from 'assets/pexels-alexandr-podvalny-1227513.webp';\r\n\r\nconst Hero = () => {\r\n    const src = useLazyBackground(image);\r\n\r\n    return (\r\n        <Container p={{ mobile: 0, tablet: 0, laptop: 0, desktop: 0 }}>\r\n            <Background src={src}>\r\n                <Container\r\n                    pt={{ mobile: 40, tablet: 89, laptop: 164 }}\r\n                    px={{ mobile: 16, tablet: 194, laptop: 322, desktopS: 395 }}\r\n                    display={'flex'}\r\n                    flexDirection={'column'}\r\n                    alignItems={'center'}\r\n                >\r\n                    <Typography\r\n                        as={'h1'}\r\n                        variant={'heading'}\r\n                        color={'white'}\r\n                        textAlign={'center'}\r\n                    >\r\n                        Test assignment for front-end developer\r\n                    </Typography>\r\n                    <Typography\r\n                        as={'p'}\r\n                        variant={'body'}\r\n                        color={'white'}\r\n                        mt={21}\r\n                        textAlign={'center'}\r\n                    >\r\n                        What defines a good front-end developer is one that has\r\n                        skilled knowledge of HTML, CSS, JS with a vast\r\n                        understanding of User design thinking as they'll be\r\n                        building web interfaces with accessibility in mind. They\r\n                        should also be excited to learn, as the world of\r\n                        Front-End Development keeps evolving.\r\n                    </Typography>\r\n                    <Box as={'a'} href={`#signup`}>\r\n                        <Button\r\n                            variant={'primary'}\r\n                            mt={32}\r\n                            aria-label={'Sign Up'}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </Box>\r\n                </Container>\r\n            </Background>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Hero;\r\n"],"names":["Button","styled","variant","variants","primary","minWidth","py","border","borderRadius","fontWeight","fontSize","lineHeight","bg","color","_ref","sx","_objectSpread","props","disabled","css","_templateObject","_taggedTemplateLiteral","theme","colors","white","composeUtility","Container","space","breakpoints","mobile","tablet","laptop","desktopS","Typography","heading","body","helperText","useLazyBackground","src","_useState","useState","_useState2","_slicedToArray","sourceLoaded","setSourceLoaded","isFirstLoading","useRef","useEffect","current","link","document","createElement","rel","as","href","head","appendChild","img","Image","onload","Background","p","image","_jsx","desktop","children","_jsxs","pt","px","display","flexDirection","alignItems","textAlign","mt","Box"],"sourceRoot":""}