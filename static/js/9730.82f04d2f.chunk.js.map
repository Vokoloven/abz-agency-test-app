{"version":3,"file":"static/js/9730.82f04d2f.chunk.js","mappings":"6OAIaA,EAAgB,WACzB,IAAAC,GAA+BC,EAAAA,EAAAA,IAAYC,EAAAA,aAAnCC,EAASH,EAATG,UAAWC,EAAOJ,EAAPI,QACXC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACfC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,GAAYC,EAAAA,EAAAA,QAAOV,IAEzBW,EAAAA,EAAAA,YAAU,WACFV,EAAMW,OAAS,GAAc,IAATV,GACpBM,EAAgB,GAExB,GAAG,CAACN,EAAMD,KAEVU,EAAAA,EAAAA,YAAU,WACFV,EAAMW,OAAS,IAAMH,EAAUI,SAC/BL,GAAgB,SAACM,GAAS,SAAAC,QAAAC,EAAAA,EAAAA,GAASF,IAASE,EAAAA,EAAAA,GAAKf,GAAK,GAE9D,GAAG,CAACA,IAEJ,IAAyBgB,EAAKC,EAIxBC,GAJmBF,EAIUV,EAJLW,EAImB,MAH7CF,EAAAA,EAAAA,GAAW,IAAII,IAAO,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKI,KAAI,SAACC,GAAI,MAAK,CAACA,EAAKJ,GAAMI,EAAK,KAAGC,WAU9D,OAL8C,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYK,MAC5C,SAACC,EAAOC,GAAM,OACVA,EAAOC,uBAAyBF,EAAME,sBAAsB,GAIxE,C,wEClCO,IAAM7B,EAAc,SAAC8B,GAAK,OAAKA,EAAM3B,KAAK,C,iFCIlC,SAASe,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIY,MAAMC,QAAQb,GAAM,OAAO,EAAAc,EAAA,GAAiBd,EAClD,CDES,CAAkBA,IELZ,SAA0Be,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBf,KAAQ,EAAAmB,EAAA,GAA2BnB,IGLvE,WACb,MAAM,IAAIoB,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["hooks/useUserFilter.js","redux/selectors/users/selectUsers.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { selectUsers } from 'redux/selectors';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nexport const useUserFilter = () => {\r\n    const { usersList, newUser } = useSelector(selectUsers);\r\n    const { users, page } = usersList;\r\n    const [updatedUsers, setUpdatedUsers] = useState([]);\r\n    const isNewUser = useRef(newUser);\r\n\r\n    useEffect(() => {\r\n        if (users.length > 0 && page === 1) {\r\n            setUpdatedUsers([]);\r\n        }\r\n    }, [page, users]);\r\n\r\n    useEffect(() => {\r\n        if (users.length > 0 && !isNewUser.current) {\r\n            setUpdatedUsers((prevState) => [...prevState, ...users]);\r\n        }\r\n    }, [users]);\r\n\r\n    const getUniqueListBy = (arr, key) => {\r\n        return [...new Map(arr?.map((item) => [item[key], item])).values()];\r\n    };\r\n\r\n    const clearUsers = getUniqueListBy(updatedUsers, 'id');\r\n\r\n    const filteredUsersByRegTimestamp = clearUsers?.sort(\r\n        (first, second) =>\r\n            second.registration_timestamp - first.registration_timestamp\r\n    );\r\n\r\n    return filteredUsersByRegTimestamp;\r\n};\r\n","export const selectUsers = (state) => state.users\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useUserFilter","_useSelector","useSelector","selectUsers","usersList","newUser","users","page","_useState","useState","_useState2","_slicedToArray","updatedUsers","setUpdatedUsers","isNewUser","useRef","useEffect","length","current","prevState","concat","_toConsumableArray","arr","key","clearUsers","Map","map","item","values","sort","first","second","registration_timestamp","state","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}